#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };

    combos {
        compatible = "zmk,combos";

        m1 {
            bindings = <&mkp MB1>;
            key-positions = <17 16>;
        };

        mb2 {
            bindings = <&mkp MB2>;
            key-positions = <17 18>;
        };

        vertical {
            bindings = <&msc MOVE_Y(20)>;
            key-positions = <7 16>;
        };

        vertical2 {
            bindings = <&msc MOVE_Y(-20)>;
            key-positions = <17 26>;
        };

        bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <11 12>;
        };

        de {
            bindings = <&kp DELETE>;
            key-positions = <12 13>;
        };

        m3 {
            bindings = <&mkp MB4>;
            key-positions = <26 27>;
        };

        m4 {
            bindings = <&mkp MB5>;
            key-positions = <27 28>;
        };

        pu {
            bindings = <&kp PAGE_UP>;
            key-positions = <15 6>;
        };

        pd {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <16 25>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp Q          &kp L       &kp U           &kp COMMA  &kp PERIOD                                      &kp F        &kp W  &kp R  &kp Y  &lt 2 P
&kp E          &kp I       &mt LEFT_ALT A  &kp O      &kp MINUS                                       &kp K        &kp T  &kp N  &kp S  &kp H
&kp Z          &kp X       &kp C           &kp V      &lt 3 SLASH                                     &kp G        &kp D  &kp M  &kp J  &kp B
&kp LC(SPACE)  &kp LSHIFT  &kp LEFT_GUI    &lt 5 TAB  &lt 1 SPACE  &lt 4 LEFT_CONTROL  &kp BACKSPACE  &lt 6 ENTER                       &kp ESCAPE
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&none     &kp LEFT_BRACKET  &kp UP_ARROW    &kp RIGHT_BRACKET  &none                           &kp COMMA     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS
&kp HOME  &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT          &kp END                         &kp DOT       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
&none     &none             &kp QUESTION    &kp LEFT_SHIFT     &none                           &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL
&trans    &trans            &trans          &trans             &trans   &trans  &kp BACKSPACE  &kp RETURN                                              &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT                  &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans                       &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SQT
&trans           &trans        &trans        &trans        &trans                       &kp UNDERSCORE  &kp PLUS       &bt BT_CLR        &bt BT_CLR_ALL        &kp NON_US_BACKSLASH
&trans           &trans        &trans        &trans        &trans       &trans  &trans  &trans                                                                 &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &none                   &kp TILDE          &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp COLON  &kp SEMICOLON
&kp F5  &kp F6   &kp F7   &kp F8   &none                   &kp SINGLE_QUOTE   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SLASH  &kp BACKSLASH
&kp F9  &kp F10  &kp F11  &kp F12  &none                   &kp DOUBLE_QUOTES  &kp LESS_THAN     &kp GREATER_THAN   &kp EQUAL  &none
&trans  &trans   &trans   &trans   &trans  &trans  &trans  &trans                                                             &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none      &none      &none        &none           &none                   &none          &msc SCRL_LEFT  &mkp MCLK       &msc SCRL_RIGHT  &none
&none      &kp HASH   &kp AT_SIGN  &kp UNDERSCORE  &none                   &kp PAGE_UP    &mkp LCLK       &msc SCRL_UP    &mkp RCLK        &none
&kp LC(Z)  &kp LC(X)  &kp LC(C)    &kp LC(V)       &none                   &kp PAGE_DOWN  &mkp MB4        &msc SCRL_DOWN  &mkp MB5         &none
&none      &trans     &trans       &trans          &trans  &trans  &trans  &mo 3                                                           &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans     &trans     &trans     &trans     &trans                  &trans  &trans              &kp LG(UP_ARROW)    &trans               &trans
&kp LC(A)  &kp LC(S)  &trans     &trans     &trans                  &trans  &kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(RIGHT_ARROW)  &trans
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans                  &none   &kp LEFT_ALT        &kp TAB             &kp LEFT_GUI         &kp ESCAPE
&trans     &trans     &trans     &trans     &trans  &trans  &trans  &trans                                                               &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans      &trans        &kp C_PLAY_PAUSE  &trans  &kp C_MUTE                         &trans  &trans  &trans  &trans  &trans
&kp DELETE  &kp LEFT_ALT  &kp LEFT_CONTROL  &trans  &kp C_VOLUME_UP                    &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans            &trans  &kp C_VOLUME_DOWN                  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans            &trans  &trans             &trans  &trans  &trans                          &trans
            >;
        };
    };
};
