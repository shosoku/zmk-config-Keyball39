#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };

    combos {
        compatible = "zmk,combos";

        m1 {
            bindings = <&mkp MB1>;
            key-positions = <17 16>;
            layers = <4 0>;
        };

        mb2 {
            bindings = <&mkp MB2>;
            key-positions = <17 18>;
            layers = <0 4>;
        };

        vertical {
            bindings = <&msc MOVE_Y(20)>;
            key-positions = <7 16>;
            layers = <0 4>;
        };

        vertical2 {
            bindings = <&msc MOVE_Y(-20)>;
            key-positions = <17 26>;
            layers = <0 4>;
        };

        bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <11 12>;
            layers = <0>;
        };

        de {
            bindings = <&kp DELETE>;
            key-positions = <12 13>;
            layers = <0>;
        };

        m3 {
            bindings = <&mkp MB4>;
            key-positions = <26 27>;
            layers = <0 4>;
        };

        m4 {
            bindings = <&mkp MB5>;
            key-positions = <27 28>;
            layers = <0 4>;
        };

        pu {
            bindings = <&kp PAGE_UP>;
            key-positions = <15 6>;
            layers = <0 4>;
        };

        pd {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <16 25>;
            layers = <0 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp Q             &kp L           &kp U             &kp COMMA           &kp PERIOD                                      &kp F        &kp W                &kp R              &kp Y            &kp P
&kp E             &kp I           &kp A             &kp O               &kp MINUS                                       &kp K        &kp T                &kp N              &kp S            &kp H
&kp Z             &mt LEFT_ALT X  &mt LEFT_SHIFT C  &mt LEFT_CONTROL V  &lt 4 SLASH                                     &kp G        &mt RIGHT_CONTROL D  &mt RIGHT_SHIFT M  &mt RIGHT_ALT J  &lt 2 B
&kp LC(LEFT_GUI)  &lt 3 AT_SIGN   &kp LC(SPACE)     &lt 5 TAB           &lt 1 SPACE  &lt 3 LEFT_CONTROL  &kp BACKSPACE  &lt 6 ENTER                                                           &lt 4 ESCAPE
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&none     &kp LEFT_BRACKET  &kp UP_ARROW    &kp RIGHT_BRACKET  &none                           &kp COMMA     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS
&kp HOME  &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT          &kp END                         &kp DOT       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
&none     &kp AT            &kp LEFT_SHIFT  &kp LEFT_CONTROL   &none                           &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL
&trans    &trans            &trans          &trans             &trans   &trans  &kp BACKSPACE  &kp RETURN                                              &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT                  &bootloader     &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans                       &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SQT
&trans           &trans        &trans        &trans        &trans                       &kp UNDERSCORE  &kp PLUS       &none             &none                 &kp NON_US_BACKSLASH
&trans           &trans        &trans        &trans        &trans       &trans  &trans  &trans                                                                 &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &none                   &kp TILDE          &kp AMPS  &kp STAR   &kp LPAR   &kp RPAR
&kp F5  &kp F6   &kp F7   &kp F8   &none                   &kp SINGLE_QUOTE   &kp DLLR  &kp PRCNT  &kp CARET  &kp BACKSLASH
&kp F9  &kp F10  &kp F11  &kp F12  &none                   &kp DOUBLE_QUOTES  &kp EXCL  &kp AT     &kp POUND  &kp PIPE
&trans  &trans   &trans   &trans   &trans  &trans  &trans  &kp RIGHT_SHIFT                                    &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none  &none   &none   &none   &none                   &none  &msc SCRL_LEFT  &mkp MCLK       &msc SCRL_RIGHT  &none
&none  &none   &none   &none   &none                   &none  &mkp LCLK       &msc SCRL_UP    &mkp RCLK        &none
&none  &none   &none   &none   &none                   &none  &mkp MB4        &msc SCRL_DOWN  &mkp MB5         &none
&none  &trans  &trans  &trans  &trans  &trans  &trans  &none                                                   &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans     &trans     &trans     &trans     &trans                  &trans  &trans              &kp LG(UP_ARROW)    &trans               &trans
&kp LC(A)  &kp LC(S)  &trans     &trans     &trans                  &trans  &kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(RIGHT_ARROW)  &trans
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans                  &none   &kp LEFT_ALT        &kp TAB             &kp LEFT_GUI         &kp ESCAPE
&trans     &trans     &trans     &trans     &trans  &trans  &trans  &trans                                                               &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans      &trans        &kp C_PLAY_PAUSE  &trans  &kp C_MUTE                         &trans  &kp TILDE       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON
&kp DELETE  &kp LEFT_ALT  &kp LEFT_CONTROL  &trans  &kp C_VOLUME_UP                    &trans  &kp MINUS       &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp COLON
&trans      &trans        &trans            &trans  &kp C_VOLUME_DOWN                  &trans  &kp UNDERSCORE  &kp LESS_THAN     &kp GREATER_THAN   &trans
&trans      &trans        &trans            &trans  &trans             &trans  &trans  &trans                                                       &trans
            >;
        };
    };
};
